# https://www.acmicpc.net/problem/1260


from collections import deque
N, M, V = map(int, input().split())
graph = [[] for _ in range(N+1)]
for i in range(M):
    a, b = map(int, input().split())
    graph[a].append(b)
    graph[b].append(a)

for j in graph:
    j.sort()

visited_d = [False] * (N+1)
visited_b = [False] * (N+1)


def dfs(graph, V, visited):
    visited[V] = True
    print(V, end=' ')
    for i in graph[V]:
        if not visited[i]:
            dfs(graph, i, visited)


def bfs(graph, V, visited):
    queue = deque([V])
    visited[V] = True
    while queue:
        k = queue.popleft()
        print(k, end=' ')
        for i in graph[k]:
            if not visited[i]:
                queue.append(i)
                visited[i] = True


dfs(graph, V, visited_d)
print('\n',end='')
bfs(graph, V, visited_b)
